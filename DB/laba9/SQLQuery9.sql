USE UNIVER;

EXEC SP_HELPINDEX 'AUDITORIUM'

CREATE TABLE #TIMETEST
           (INDEX_ INT, 
            MESSAGES_
            NVARCHAR(20))
SET NOCOUNT ON -- Õ≈ ¬€¬Œƒ»“‹ —ŒŒ¡Ÿ≈Õ»ﬂ Œ ¬¬Œƒ≈ —“–Œ 
DECLARE @I INT = 0
WHILE @I < 1000
BEGIN
INSERT #TIMETEST(INDEX_, MESSAGES_) VALUES (FLOOR(20000*RAND()), REPLICATE('—“–Œ ¿ ', 2))
IF (@I % 100 = 0) PRINT @I;
SET @I = @I + 1
END

SELECT * FROM #TIMETEST WHERE INDEX_ BETWEEN 1000 AND 1500 ORDER BY INDEX_ 

CHECKPOINT; 

DBCC DROPCLEANBUFFERS

CREATE CLUSTERED INDEX TIMETEST_CL ON #TIMETEST(INDEX_ ASC)

SELECT * FROM #TIMETEST WHERE INDEX_ BETWEEN 1000 AND 1500 ORDER BY INDEX_

DROP INDEX TIMETEST_CL ON #TIMETEST

DROP TABLE #TIMETEST;

-----------------------------------------------------2>
CREATE TABLE #TEST2
(
INFO NVARCHAR (20),
ITERATOR INT IDENTITY(1,1),
INDEX_ INT 
)
SET NOCOUNT ON
DECLARE @X INT =1;
WHILE @X <= 100000
BEGIN
INSERT INTO #TEST2(INFO,INDEX_)
VALUES ('—“–Œ ¿' + CAST(@X AS NVARCHAR),FLOOR(20000*RAND()))
SET @X +=1;
END

SELECT * FROM #TEST2 WHERE INFO = '—“–Œ ¿2' AND INDEX_ >= 1500

CHECKPOINT;

DBCC DROPCLEANBUFFERS

CREATE INDEX #TEST2_NONCL ON #TEST2(INFO,INDEX_)

SELECT * FROM #TEST2 WHERE INFO = '—“–Œ ¿2' AND INDEX_ >= 10

DROP INDEX #TEST2_NONCL ON #TEST2

-----------------------------------------------------3>
CREATE TABLE #TASK3
(
INFO NVARCHAR (20),
ITERATOR INT IDENTITY(1,1),
INDEX_ INT 
)

DECLARE @X INT =1;
WHILE @X <= 11000
BEGIN
INSERT INTO #TASK3(INFO,INDEX_)
VALUES ('—“–Œ ¿' + CAST(@X AS NVARCHAR),FLOOR(20000*RAND()))
SET @X +=1;
END

SELECT INFO FROM #TASK3 WHERE ITERATOR >=10000 

CHECKPOINT;

DBCC DROPCLEANBUFFERS

CREATE INDEX #NONCLUSTPOK ON #TASK3 (ITERATOR) INCLUDE (INFO)

SELECT INFO FROM #TASK3 WHERE ITERATOR >=10000 

DROP INDEX #NONCLUSTPOK ON #TASK3POK

DROP TABLE #TASK3

-----------------------------------------------------4>
CREATE TABLE #TASK4
(
INFO NVARCHAR (20),
ITERATOR INT IDENTITY(1,1),
INDEX_ INT 
)

DECLARE @X INT =1;
WHILE @X <= 11000
BEGIN
INSERT INTO #TASK4(INFO,INDEX_)
VALUES ('—“–Œ ¿' + CAST(@X AS NVARCHAR),FLOOR(20000*RAND()))
SET @X +=1;
END

SELECT ITERATOR FROM #TASK4 
WHERE ITERATOR > 1500 AND ITERATOR < 2000

CHECKPOINT;
DBCC DROPCLEANBUFFERS

CREATE INDEX #INDEX ON #TASK4(ITERATOR)
WHERE (ITERATOR > 1500 AND ITERATOR < 2000)

SELECT ITERATOR FROM #TASK4 
WHERE ITERATOR > 1500 AND ITERATOR < 2000

DROP INDEX #INDEX ON #TASK4

-----------------------------------------------------5>
CREATE TABLE  #TASK5
(
INFO NVARCHAR (20),
ITERATOR INT IDENTITY(1,1),
INDEX_ INT 
)

DECLARE @X INT =1;
WHILE @X <= 11000
BEGIN
INSERT INTO  #TASK5(INFO,INDEX_)
VALUES ('—“–Œ ¿' + CAST(@X AS NVARCHAR),FLOOR(20000*RAND()))
SET @X +=1;
END

CHECKPOINT;
DBCC DROPCLEANBUFFERS

CREATE INDEX #TASK5_KEY ON #TASK5(INDEX_)


             
SELECT NAME [»Ì‰ÂÍÒ], AVG_FRAGMENTATION_IN_PERCENT [‘‡„ÏÂÌÚ‡ˆËˇ (%)] 
FROM SYS.DM_DB_INDEX_PHYSICAL_STATS(DB_ID(N'TEMPDB'),
OBJECT_ID(N'#TASK5'), NULL, NULL, NULL) SS
JOIN SYS.INDEXES II ON SS.OBJECT_ID = II.OBJECT_ID
AND SS.INDEX_ID = II.INDEX_ID WHERE NAME IS NOT NULL;

INSERT TOP(10000000) #TASK5(INDEX_ ,INFO) SELECT INDEX_, INFO FROM #TASK5

DROP INDEX #TASK5_KEY ON #TASK5

DROP TABLE #TASK5

ALTER INDEX #TASK5_KEY ON #TASK5 REORGANIZE 

ALTER INDEX #TASK5_KEY ON #TASK5 REBUILD WITH (ONLINE = OFF) 

-----------------------------------------------------6>
CREATE TABLE  #TASK6
(
INFO NVARCHAR (20),
ITERATOR INT IDENTITY(1,1),
INDEX_ INT 
)

DECLARE @X INT =1;
WHILE @X <= 11000
BEGIN
INSERT INTO  #TASK6(INFO,INDEX_)
VALUES ('—“–Œ ¿' + CAST(@X AS NVARCHAR),FLOOR(20000*RAND()))
SET @X +=1;
END

CREATE INDEX #TASK6_TKEY ON #TASK6(INDEX_) WITH FILLFACTOR = 65 

INSERT TOP(50)PERCENT #TASK6(INDEX_, INFO) SELECT INDEX_, INFO FROM #TASK6

SELECT NAME [»Ì‰ÂÍÒ], AVG_FRAGMENTATION_IN_PERCENT [‘‡„ÏÂÌÚ‡ˆËˇ (%)]
FROM SYS.DM_DB_INDEX_PHYSICAL_STATS(DB_ID(N'TEMPDB'),
OBJECT_ID(N'#TASK5'), NULL, NULL, NULL) SS
JOIN SYS.INDEXES II ON SS.OBJECT_ID = II.OBJECT_ID AND SS.INDEX_ID = II.INDEX_ID WHERE NAME IS NOT NULL;

DROP INDEX #TASK6_TKEY ON #TASK6

DROP TABLE #TASK6